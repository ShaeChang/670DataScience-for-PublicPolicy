{"frames":[{"func":"stretch_fun_test(103, votes)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"y %>% replace(., is.na(.), 0) %>% filter(session == x) %>% select(starts_with(\"v\"))","file":"","line_number":3,"end_line_number":6,"character_number":3,"end_character_number":28},{"func":"select(., starts_with(\"v\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter(., session == x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"replace(., is.na(.), 0)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`[<-`(`*tmp*`, list, value = 0)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`[<-.tbl_df`(`*tmp*`, list, value = 0)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tbl_subassign_matrix(x, j, value, j_arg, substitute(value))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (j in col_idx) {\n    x[[j]] <- vectbl_assign(x[[j]], cells[[j]], value)\n}, vctrs_error_incompatible_type = function(cnd) {\n    cnd_signal(error_assign_incompatible_type(x, rep(list(value),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vectbl_assign(x[[j]], cells[[j]], value)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_assign(x, i, value)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function () \nvec_default_cast(x = x, to = to, x_arg = x_arg, to_arg = to_arg, \n    `vctrs:::from_dispatch` = `vctrs:::from_dispatch`, `vctrs:::df_fallback` = `vctrs:::df_fallback`, \n    `vctrs:::s3_fallback` = `vctrs:::s3_fallback`))()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_default_cast(x = x, to = to, x_arg = x_arg, to_arg = to_arg, \n    `vctrs:::from_dispatch` = `vctrs:::from_dispatch`, `vctrs:::df_fallback` = `vctrs:::df_fallback`, \n    `vctrs:::s3_fallback` = `vctrs:::s3_fallback`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible_cast(x, to, x_arg = x_arg, to_arg = to_arg, \n    `vctrs:::from_dispatch` = match_from_dispatch(...))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible_type(x = x, y = to, ..., x_arg = x_arg, y_arg = to_arg, \n    action = \"convert\", details = details, message = message, \n    class = class)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible(x, y, x_arg = x_arg, y_arg = y_arg, details = details, \n    ..., message = message, class = c(class, \"vctrs_error_incompatible_type\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_vctrs(message, class = c(class, \"vctrs_error_incompatible\"), \n    x = x, y = y, details = details, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = c(class, \"vctrs_error\"), ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    cnd_signal(error_assign_incompatible_type(x, rep(list(value), \n        j), j, value_arg, cnd_message(cnd))) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(error_assign_incompatible_type(x, rep(list(value), \n    j), j, value_arg, cnd_message(cnd)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: \n"}